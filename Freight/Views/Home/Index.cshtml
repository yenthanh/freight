@{
    ViewBag.Title = "Login";
}
<v-app>
    <v-content>
        <v-container class="fill-height" fluid>
            <v-row align="center" justify="center">
                <v-col cols="12" sm="8" md="4">
                    <v-card class="elevation-12">
                        <v-card-text>
                            <v-row justify="center">
                                <v-img :src="logo" contain max-width="150" max-height="150"></v-img>
                            </v-row>
                            <v-divider class="my-8"></v-divider>
                            <label v-if="notMMEmail===false"
                                   class="red--text font-weight-bold">For Mentor Media Employee, Please click "LOGIN" directly</label>
                            <form submit.prevent="submit">
                                <v-text-field v-if="notMMEmail===true"
                                              prepend-icon="mdi-account"
                                              outlined
                                              v-model="username"
                                              :error-messages="usernameErrors"
                                              label="Email"
                                              placeholder=" "
                                              input="validateUsername"
                                              blur="validateUsername"></v-text-field>
                                <v-text-field v-if="notMMEmail===true"
                                              id="password"
                                              label="Password"
                                              placeholder=" "
                                              name="password"
                                              v-model="password"
                                              prepend-icon="mdi-lock"
                                              type="password"
                                              input="validatePasword"
                                              blur="validatePasword"
                                              :error-messages="passwordErrors"
                                              :hide-details="passwordErrors.length === 0"
                                              outlined></v-text-field>
                                <v-checkbox v-model="notMMEmail" :label="`I am not Mentor Media staff`" color="primary"></v-checkbox>
                                <!-- <v-checkbox v-model="mmEmail" :label="`Use Mentor Media email`" color="primary"></v-checkbox> -->
                                <div class="d-flex justify-center">
                                    <v-btn color="primary" type="submit" :loading="logging" block>Log in</v-btn>
                                </div>
                            </form>
                        </v-card-text>
                    </v-card>
                </v-col>
            </v-row>
        </v-container>
    </v-content>
</v-app>

@section scripts {
    <script>
        $(document).ready(function () {
            $("#submitButton").click(function () {
                var login = {
                    channel: "web",
                    username: $("#exampleInputEmail1").val(),
                    pwd: $("#exampleInputPassword1").val()
                }
                console.log("---> data", login);
                var CTLSX = JSON.stringify(login)
                $.ajax({
                    url: "/account/login",
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json;charset=utf-8",
                    data: CTLSX,
                    success: function (data) {
                        window.location.href = "/Calculator/Index";
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    }
                });

            })

        })
    </script>
    <script>
        $(document).ready(function () {

            var vueApp = new Vue({
                el: '#app',
                vuetify: new Vuetify(),
                icons: {
                    iconfont: 'mdi', // default - only for display purposes
                },
                data: () => ({
                    logo: "/assets/logo.png",
                    usernameErrors: [],
                    passwordErrors: [],
                    username: "",
                    password: "",
                    logging: false,
                    notMMEmail: false,
                    mmEmail: false,
                    urlRedirect: "https://ebiz3-uat.mentormedia.com/UAT/O365Login?Redirect="
                }),

                methods: {
                    submit() {
                        this.usernameErrors = [];
                        this.passwordErrors = [];
                        this.logging = true;
                        let username = this.username;
                        if (this.notMMEmail === false) {
                            let url = this.urlRedirect + window.location.href;
                            window.location.replace(url);
                            return;
                        }
                        this.$LOGIN(username, this.password)
                            .then(response => {
                                let loginer = response.data.data;

                                if (response.data.error.code === API_Responses.OK.code) {
                                    Cookies.set("username", loginer.UserName);
                                    Cookies.set("token_key", loginer.TokenKey);
                                    this.logging = false;
                                    this.$router.push("/");
                                } else if (
                                    response.data.error.code === API_Responses.login["2"].code
                                ) {
                                    this.usernameErrors = "Email does not exist or invalid";
                                    this.logging = false;
                                } else if (
                                    response.data.error.code === API_Responses.login["3"].code
                                ) {
                                    this.passwordErrors = "Password is invalid";
                                    this.logging = false;
                                } else if (
                                    response.data.error.code === API_Responses.login["6"].code
                                ) {
                                    this.usernameErrors = "Email or password is invalid";
                                    this.passwordErrors = "Email or password is invalid";
                                    this.logging = false;
                                } else if (
                                    response.data.error.code === API_Responses.login["4"].code
                                ) {
                                    this.logging = false;
                                    this.$notify({
                                        group: "login",
                                        title: "Alert",
                                        type: "warn",
                                        text: API_Responses.login["4"].message,
                                        duration: 10000
                                    });
                                } else {
                                    this.logging = false;
                                    this.$notify({
                                        group: "login",
                                        type: "warn",
                                        title: "Alert",
                                        text: response.data.data,
                                        duration: 10000
                                    });
                                }
                            })
                            .catch(e => {
                                this.logging = false;
                                this.$notify({
                                    group: "login",
                                    type: "error",
                                    title: "Error",
                                    text: "Cannot connect to the server",
                                    duration: 10000
                                });
                            });
                    },
                    loginBy2FA(username) {
                        this.$LOGIN_2FA(username)
                            .then(response => {
                                if (response.data.error.code === API_Responses.OK.code) {
                                    let loginer = response.data.data;
                                    Cookies.set("username", loginer.UserName);
                                    Cookies.set("token_key", loginer.TokenKey);
                                    this.logging = false;
                                    this.$router.push("/");
                                } else {
                                    this.logging = false;
                                    let msg = response.data.data;
                                    this.$notify({
                                        group: "login",
                                        title: "Alert",
                                        type: "warn",
                                        text: msg, //API_Responses.login['4'].message,
                                        duration: 10000
                                    });
                                }
                            })
                            .catch(e => {
                                this.logging = false;
                                this.$notify({
                                    group: "login",
                                    type: "error",
                                    title: "Error",
                                    text: "Cannot connect to the server",
                                    duration: 10000
                                });
                            });
                    },
                    validatePasword(value) {
                        if (typeof value === "object") {
                            value = value.target.value;
                        }
                        let errors = [];
                        if (value.length === 0) {
                            errors.push("This field is required");
                        }
                        this.passwordErrors = errors;
                    },

                    validateUsername(value) {
                        if (typeof value === "object") {
                            value = value.target.value;
                        }
                        let errors = [];
                        if (value.length === 0) {
                            errors.push("This field is required");
                        }
                        this.usernameErrors = errors;
                    }
                },
                mounted() {
                    //if (!this.$isServer) {
                    //    let id = this.$route.query.ID;
                    //    if (id != undefined) this.loginBy2FA(id);
                    //}
                }
            })
        })
    </script>
}